---
import DashboardMenu from "@components/Menus/DashboardMenu.astro";
import NavItems from "./nav-items.astro";
---

<header>
  <nav class="mobile-nav">
    <details class="menu-detail">
      <summary>
        <p class="menu">
          <svg width="30" height="30" viewBox="0 0 100 100">
            <path
              class="line line1"
              d="M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058"
            ></path>
            <path class="line line2" d="M 20,50 H 80"></path>
            <path
              class="line line3"
              d="M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942"
            ></path>
          </svg>
        </p>
      </summary>
      <NavItems classp="mobile-nav-items" />
    </details>
  </nav>
  <a href="/#home" class="logo">
    <img
      alt="Harikar NGO's logo"
      src="/logos/harikar-logo.svg"
      width="40"
      height="60"
    />
    <h1 class="logo-text">Harikar</h1>
  </a>
  <nav class="main-nav">
    <NavItems classp="main-nav-items" />
  </nav>
  <ul class="buttons">
    <li class="dashboard-menu">
      <DashboardMenu />
    </li>
  </ul>
</header>

<script>
  // Fetch all the details element.
  const details = document.querySelectorAll("details");

  // Add the onclick listeners.
  details.forEach((detail) => {
    detail.addEventListener("toggle", () => {
      if (detail.open) setTargetDetail(detail);
    });
  });

  // Add the onclick listeners.
  details.forEach((detail) => {
    document.addEventListener("click", (e) => {
      if (detail.open && !detail.contains(e.target)) detail.open = false;
    });
  });

  // Close all the details that are not targetDetail.
  function setTargetDetail(targetDetail) {
    details.forEach((detail) => {
      if (detail !== targetDetail) {
        detail.open = false;
      }
    });
  }
</script>

<style>
  header {
    display: grid;
    grid-template-areas: "logo nav buttons";
    grid-template-columns: 3fr 3fr 2fr;
    align-content: center;
    align-items: center;
    padding-block: 3rem;
    position: sticky;
    top: 0;
    z-index: 4;
    background: var(--surface-container);
    height: 6em;
    max-width: 100%;
  }

  .main-nav {
    grid-area: nav;
    justify-self: end;
  }

  .logo {
    justify-self: start;
    display: flex;
    place-content: center;
    place-items: center;
    grid-area: logo;
    gap: 1rem;
    margin-inline-start: 6rem;
    z-index: 5;
    text-decoration: none;
  }

  .logo-text {
    font-size: var(--fs-lg);
    font-weight: 700;
  }

  .logo > img {
    min-width: 35px;
    min-height: 60px;
    max-width: 35px;
    max-height: 60px;
  }

  .buttons {
    padding-inline-start: 1rem;
    max-width: max-content;
    justify-self: start;
    justify-content: start;
    align-items: center;
    grid-area: buttons;
    list-style: none;
    display: flex;
    margin-inline-end: 2rem;
    gap: 1rem;
  }

  .mobile-nav {
    display: none;
  }

  @media (max-width: 700px) {
    header {
      grid-template-columns: 40px 40px 1fr;
    }
    .logo-text {
      display: none;
    }

    .dashboard-menu {
      display: none;
    }
  }

  @media (max-width: 1300px) {
    header {
      justify-content: start;
      grid-template-areas: "menu logo buttons";
      grid-template-columns: 60px 1fr 1fr;
      gap: 1rem;
    }

    .buttons {
      justify-self: end;
    }

    .logo {
      justify-content: start;
      margin-inline-start: 0;
    }

    .main-nav {
      display: none;
    }

    .mobile-nav {
      display: flex;
    }

    details {
      grid-area: menu;
      background-color: transparent;
    }

    summary {
      background-color: transparent;
      list-style: none;
      display: grid;
      margin: 0;
      padding: 0;
      font-size: var(--fs-sm);
    }
  }

  .menu {
    background-color: transparent;
    border: none;
    cursor: pointer;
    color: var(--on-surface);
    z-index: 9999;
    width: 30px;
    height: 30px;
    margin-inline-start: 2rem;
  }
  .menu > svg {
    stroke: var(--on-surface);
    stroke-width: 6;
  }
  .menu > svg:hover {
    stroke: var(--on-surface);
    stroke-width: 8;
  }

  .line {
    fill: none;
    /* stroke: var(--text2); */
    /* stroke-width: 6; */
    transition:
      stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
      stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line1 {
    stroke-dasharray: 60 207;
    /* stroke-width: 6; */
  }
  .line2 {
    stroke-dasharray: 60 60;
    /* stroke-width: 6; */
  }
  .line3 {
    stroke-dasharray: 60 207;
    /* stroke-width: 6; */
  }

  details[open] .line1 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    /* stroke-width: 6; */
  }
  details[open] .line2 {
    stroke-dasharray: 1 60;
    stroke-dashoffset: -30;
    /* stroke-width: 6; */
  }
  details[open] .line3 {
    stroke-dasharray: 90 207;
    stroke-dashoffset: -134;
    /* stroke-width: 6; */
  }
</style>
